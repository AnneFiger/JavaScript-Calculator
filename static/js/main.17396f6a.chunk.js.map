{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","display","setDisplay","decimal","setDecimal","zeroRegex","minusRegex","divideMultiplyRegex","catchRegex","displaySymbol","event","prevState","target","value","test","substr","length","handleDivideMultiply","handleDecimal","clearInputOutput","calculateInput","eval","className","id","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17396f6a.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nfunction App() {\n  const [display, setDisplay] = React.useState(\"0\");\n  const [decimal, setDecimal] = React.useState(false);//decimal is initialised to false \n  // if not used. If it is then it will be set to true and the logic will prevent it from \n  // being output twice in the same number or just before an operator.\n\n  let zeroRegex = /0$/;\n  let minusRegex = /-$/;\n  let divideMultiplyRegex = /(\\*|\\+|-|\\.|\\/)$/;\n  let catchRegex = /(\\*|\\+|-|\\/)$/;\n  //These Regexes are defined here to be reused in the handler functions below\n\n  const displaySymbol = (event) => {\n    setDisplay((prevState) =>\n      prevState == 0 && decimal === false \n        ? event.target.value\n        : zeroRegex.test(prevState) &&\n          divideMultiplyRegex.test(prevState.substr(0, prevState.length - 1))//this ensures that multiple zeros won't be output\n        ? prevState.substr(0, prevState.length - 1) + event.target.value//first from the second number onwards\n        : minusRegex.test(prevState) && event.target.value == '-'\n        ? prevState.substr(0, prevState.length - 1) + '+'//will ensure that 2 minuses don't get output one after another\n        : prevState + event.target.value\n    );\n    if (event.target.value == \"-\") {\n      setDecimal(false);\n    }\n  };\n\n  const handleDivideMultiply = (event) => {\n    setDisplay((prevState) =>\n      divideMultiplyRegex.test(prevState)\n        ? divideMultiplyRegex.test(prevState.substr(0, prevState.length - 1))\n          ? prevState.substr(0, prevState.length - 2) + event.target.value //this ensures that if an operator and a minus sign \n          //have been previously output just before pressing an operator again only the last operator is taken into account\n          : prevState.substr(0, prevState.length - 1) + event.target.value// this ensures that if two operators are output \n          //successively only the last one will be taken into account\n        : prevState + event.target.value\n    );\n    setDecimal(false);\n  };\n\n  const handleDecimal = (event) => {\n    if (decimal === false) {\n      setDisplay((prevState) => prevState + event.target.value);\n      setDecimal(true);\n    } else {\n      return;\n    }\n  };\n\n  const clearInputOutput = () => {\n    setDisplay(\"0\");\n    setDecimal(false);\n  };\n\n  const calculateInput = () => {\n    setDisplay((prevState) =>\n      catchRegex.test(prevState)\n        ? eval(prevState.substr(0, prevState.length - 1))// this ensures that if an operator has been output last \n        //it is removed from the expression evaluated as to not crash the app.\n        : eval(display)\n    );\n    setDecimal(false);\n  };\n\n  return (\n    <div className=\"App\">\n      \n        <div className=\"grid\">\n          <div id=\"display\" className=\"display\">\n            {display}\n          </div>\n          <button\n            onClick={clearInputOutput}\n            id=\"clear\"\n            className=\"button clear\"\n            value=\"0\"\n          >\n            AC\n          </button>\n          <button\n            onClick={handleDivideMultiply}\n            id=\"divide\"\n            value=\"/\"\n            className=\"button\"\n          >\n            /\n          </button>\n          <button\n            onClick={handleDivideMultiply}\n            id=\"multiply\"\n            value=\"*\"\n            className=\"button\"\n          >\n            x\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"seven\"\n            value=\"7\"\n            className=\"button\"\n          >\n            7\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"eight\"\n            value=\"8\"\n            className=\"button\"\n          >\n            8\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"nine\"\n            value=\"9\"\n            className=\"button\"\n          >\n            9\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"subtract\"\n            value=\"-\"\n            className=\"button\"\n          >\n            -\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"four\"\n            value=\"4\"\n            className=\"button\"\n          >\n            4\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"five\"\n            value=\"5\"\n            className=\"button\"\n          >\n            5\n          </button>\n          <button onClick={displaySymbol} id=\"six\" value=\"6\" className=\"button\">\n            6\n          </button>\n          <button\n            onClick={handleDivideMultiply}\n            id=\"add\"\n            value=\"+\"\n            className=\"button\"\n          >\n            +\n          </button>\n          <button onClick={displaySymbol} id=\"one\" value=\"1\" className=\"button\">\n            1\n          </button>\n          <button onClick={displaySymbol} id=\"two\" value=\"2\" className=\"button\">\n            2\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"three\"\n            value=\"3\"\n            className=\"button\"\n          >\n            3\n          </button>\n          <button\n            onClick={calculateInput}\n            id=\"equals\"\n            value=\"=\"\n            className=\"button equals\"\n          >\n            =\n          </button>\n          <button\n            onClick={displaySymbol}\n            id=\"zero\"\n            className=\"button zero\"\n            value=\"0\"\n          >\n            0\n          </button>\n          <button\n            onClick={handleDecimal}\n            id=\"decimal\"\n            value=\".\"\n            className=\"button\"\n          >\n            .\n          </button>\n        </div>\n      </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}